<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>8.29 Chapter1 1.1 homework</title>
    <link href="/2022/08/29/8-29-Chapter1-1-1-homework/"/>
    <url>/2022/08/29/8-29-Chapter1-1-1-homework/</url>
    
    <content type="html"><![CDATA[<p>​    第一节课</p><span id="more"></span><p>第一题：</p><p>正常我们判断一个数的奇偶是看这个数能不能被二整除，运用这个思路写的程序就只要求数m满足m%2==0即可完成；</p><p>在学习了二进制性质一之后，我们有了一个新思路，即判断数m的二进制形式的最后一个比特是0还是1，来确定它的奇偶。但转念一想。哎……那这不是一个意思吗？</p><p>那题解就如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> m;<br>    cin&gt;&gt;m;<br>    <span class="hljs-keyword">if</span>(m%<span class="hljs-number">2</span>==<span class="hljs-number">0</span>)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    &#125;<br>    <span class="hljs-keyword">if</span>(m%<span class="hljs-number">2</span>==<span class="hljs-number">1</span>)<br>    &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><!--more--><p>第三题</p><p>根据今天上课学到的迭代乘法式，用C++语言表示出来</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-comment">#include &lt;bits/stdc++.h&gt;</span><br>using namespace std;<br>int main()<br>&#123;<br>    int m,i,n,t,l;<br>    int a[10];<br>    cin&gt;&gt;n&gt;&gt;m;<br>    int <span class="hljs-attribute">b</span>=0;<br>    int <span class="hljs-attribute">num</span>=0;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-attribute">i</span>=0;m&gt;0;i++)<br>    &#123;<br>        a[i]=m%2;<br>        <span class="hljs-attribute">m</span>=m/2;<br>        b++;<br>    &#125;<br><br>    <span class="hljs-keyword">for</span>(int <span class="hljs-attribute">j</span>=i;j&gt;=0;j--)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(a[j]==1)<br>        &#123;<br>            <span class="hljs-attribute">t</span>=pow(2,j);<br>            <span class="hljs-attribute">l</span>=n*t;<br>            num+=l;<br>        &#125;<br>    &#125;<br>    cout&lt;&lt;num&lt;&lt;endl;<br>    return 0;<br>&#125;<br></code></pre></td></tr></table></figure><!--more--><p>第四题</p><p>证明命题1.1<br>证明过程：<br>首先证明前半部分：根据a | b，b | c，设b=qa，c=pb，其中q,p∈ Z。则c=p<em>(qa)=pq</em>a。由于p∈ Z，q∈ Z，因此p,q∈ Z。所以 c | a得证。</p><p>证明后半部分：<br>根据c | a，c | b，设a=qc，b=pc，其中q,p∈ Z。则(ma+nb)/c<br>=ma/c+nb/c<br>=mqc/c+npc/c<br>=mq+np.<br>即ma+nb=(mq+np)c。<br>由于q,p∈ Z，m, n ∈ Z，因此mq,np∈ Z。所以c | (ma + nb)得证。</p>]]></content>
    
    
    
    <tags>
      
      <tag>作业</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LaTex</title>
    <link href="/2022/07/25/LaTex/"/>
    <url>/2022/07/25/LaTex/</url>
    
    <content type="html"><![CDATA[<script type="math/tex; mode=display">a^3+b^3=c^3</script><p>好耶！</p><span id="more"></span><p>在第一次完成公式的时候，我打开blog看看帖子的效果，发现并不像我在编辑器里打出的LaTex语句一样，而是把我本来的语句显示出来，在一番搜索之后，发现hexo的渲染器不支持LaTex的语句，于是在进行一系列的修改后，将hexo的渲染器改成了Katex，就可以成功显示LaTex语句了！</p>]]></content>
    
    
    
    <tags>
      
      <tag>作业</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>判断素数</title>
    <link href="/2022/07/25/%E5%88%A4%E6%96%AD%E7%B4%A0%E6%95%B0/"/>
    <url>/2022/07/25/%E5%88%A4%E6%96%AD%E7%B4%A0%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<p>​    简单题</p><span id="more"></span><h1 id="include"><a href="#include" class="headerlink" title="include"></a>include<iostream></h1><p>using namespace std;<br>void prime(int a)<br>{<br>    if(a==1)<br>    cout&lt;&lt;”not prime”;<br>    else if(a==2||a==3)<br>    cout&lt;&lt;”prime”;<br>    else<br>    for(int i=2;i&lt;=a/2;i++)<br>    {<br>        if(a%i==0)<br>        {<br>            cout&lt;&lt;”not prime”;<br>            break;<br>        }<br>        else if(i==a/2)<br>        cout&lt;&lt;”prime”;<br>    }<br>}<br>int main()<br>{<br>    int n;<br>    cin&gt;&gt;n;<br>    prime(n);<br>    return 0;<br>}</p>]]></content>
    
    
    
    <tags>
      
      <tag>作业</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>二进制数</title>
    <link href="/2022/07/25/%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%95%B0/"/>
    <url>/2022/07/25/%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<p>​    简单题</p><span id="more"></span><h1 id="include"><a href="#include" class="headerlink" title="include "></a>include <iostream></h1><p>using namespace std;<br>int main()<br>{<br>    int a[1000];<br>    int i=0;<br>    int m,n;<br>    cin&gt;&gt;m;<br>    while(1)<br>    {<br>        if(m&gt;1)<br>        {<br>            a[i]=m%2;<br>            m=m/2;<br>            i++;<br>        }<br>        if(m==0||m==1)<br>        {<br>            a[i]=m;<br>            break;<br>        }<br>    }<br>    for(int j=i;i&gt;=0;i—)<br>    {<br>        cout&lt;&lt;a[i];<br>    }<br>    return 0;<br>}</p>]]></content>
    
    
    
    <tags>
      
      <tag>作业</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>插入排序</title>
    <link href="/2022/07/15/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F/"/>
    <url>/2022/07/15/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F/</url>
    
    <content type="html"><![CDATA[<p>（这是第一次写的作业）</p><span id="more"></span><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">swap</span><span class="hljs-params">(<span class="hljs-type">int</span> &amp;a, <span class="hljs-type">int</span> &amp;b)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> temp = a;<br>    a = b;<br>    b = temp;<br>&#125;<br><span class="hljs-comment">/*</span><br><span class="hljs-comment">插入排序。注意，若后面一个元素比其前面一个元素小，则将这两个元素交换位置，然后再来比较这个插入元素与前面一个元素的大小，若小，则还需要交换这两个元素位置，一直到这个插入元素在正确的位置为止</span><br><span class="hljs-comment">*/</span><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">insertSort</span><span class="hljs-params">(<span class="hljs-type">int</span> a[],  <span class="hljs-type">int</span> length)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt; length; i++)<br>    &#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> j = i - <span class="hljs-number">1</span>; j &gt;= <span class="hljs-number">0</span> &amp;&amp; a[j + <span class="hljs-number">1</span>] &lt; a[j]; j--)<br>        &#123;<br>            <span class="hljs-built_in">swap</span>(a[j], a[j + <span class="hljs-number">1</span>]);<br>        &#125;<br>    &#125;<br><br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> a[] = &#123; <span class="hljs-number">2</span>,<span class="hljs-number">1</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">3</span>,<span class="hljs-number">8</span>,<span class="hljs-number">7</span>,<span class="hljs-number">9</span>,<span class="hljs-number">0</span>,<span class="hljs-number">6</span> &#125;;<br><br>    <span class="hljs-built_in">insertSort</span>(a, <span class="hljs-number">10</span>);<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10</span>; i++)<br>    &#123;<br>        cout &lt;&lt; a[i] &lt;&lt; <span class="hljs-string">&quot;&quot;</span>;<br><br>    &#125;<br>    cout &lt;&lt; endl;<br>    <span class="hljs-built_in">system</span>(<span class="hljs-string">&quot;pause&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>插入排序的代码大概就是这样罢……</p>]]></content>
    
    
    
    <tags>
      
      <tag>-作业</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/07/10/hello-world/"/>
    <url>/2022/07/10/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
